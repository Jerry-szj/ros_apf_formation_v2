controller_frequency: 10.0  # 控制器的更新频率，单位为Hz
# 数值越大，控制器更新越频繁，对动态环境的响应越快，但计算负担增加；数值越小，更新频率降低，响应变慢，但计算负担减轻。

recovery_behaviour_enabled: true  # 是否启用恢复行为（如清除成本图）
# true：启用恢复行为，当机器人陷入困境时会尝试清除成本图或切换到其他恢复行为；false：不启用，机器人可能在困境中停滞。
NavfnROS:
  allow_unknown: true  # 是否允许路径规划器生成通过未知区域的路径
  # true：允许路径穿过未知区域，适合探索性任务；false：仅规划已知区域路径，避免进入未知区域，适合已知环境。

  default_tolerance: 0.1  # 规划器对目标点的默认容忍度
  # 数值越大，目标点的容忍范围越宽，路径规划可能更宽松；数值越小，路径规划更精确，但可能更难以达到目标。
TrajectoryPlannerROS:
  # 机器人配置参数
  acc_lim_x: 2.5  # x方向加速度限制，单位为m/s²
  # 数值越大，机器人加速和减速越快，运动更灵活；数值越小，运动更平稳，但响应速度变慢。

  acc_lim_theta: 5.0  # 角加速度限制，单位为rad/s²
  # 数值越大，机器人旋转加速和减速越快，转向更灵活；数值越小，转向更平稳，但响应速度变慢。

  max_vel_x: 0.8  # x方向最大速度，单位为m/s
  # 数值越大，机器人前进速度越快，效率更高；数值越小，速度受限，运动更谨慎。

  min_vel_x: 0.0  # x方向最小速度，单位为m/s
  # 数值越大，机器人在低速时的灵活性降低；数值越小，机器人可以更缓慢地移动，适合精细操作。

  max_vel_theta: 2.0  # 角速度最大值，单位为rad/s
  # 数值越大，机器人旋转速度越快，转向更灵活；数值越小，旋转速度受限，转向更缓慢。

  min_vel_theta: -2.0  # 角速度最小值，单位为rad/s
  # 数值越负，机器人可以更快速地反向旋转；数值越接近零，反向旋转能力受限。

  min_in_place_vel_theta: 0.8  # 原地旋转时的最小角速度，单位为rad/s
  # 数值越大，原地旋转更快速，响应更快；数值越小，原地旋转更缓慢，适合精细操作。

  holonomic_robot: false  # 是否为全向机器人（非全向机器人只能沿前进方向移动）
  # true：机器人可以全向移动，灵活性更高；false：机器人只能沿前进方向移动，适合非全向机器人。

  escape_vel: -0.9  # 超出速度限制时的逃逸速度，单位为m/s
  # 数值越负，逃逸速度越快；数值越接近零，逃逸能力受限。

  # 目标容忍度参数
  yaw_goal_tolerance: 0.01  # 目标方向的容忍度，单位为rad
  # 数值越大，目标方向的容忍范围越宽，更容易达到目标；数值越小，方向要求更精确，但可能更难达到目标。

  xy_goal_tolerance: 0.05  # 目标位置的容忍度，单位为m
  # 数值越大，目标位置的容忍范围越宽，更容易达到目标；数值越小，位置要求更精确，但可能更难达到目标。

  latch_xy_goal_tolerance: true  # 是否锁定目标位置容忍度
  # true：锁定目标位置容忍度，目标位置一旦达到容忍范围，机器人停止；false：不锁定，机器人可能继续微调。

  # 前向模拟参数
  sim_time: 1.0  # 模拟时间，单位为s
  # 数值越大，模拟时间越长，规划更远的路径，但计算负担增加；数值越小，模拟时间缩短，响应更快，但可能不够精确。

  sim_granularity: 0.02  # 线性模拟粒度，单位为m
  # 数值越大，模拟粒度越粗，计算速度更快，但精度降低；数值越小，模拟粒度更细，精度更高，但计算负担增加。

  angular_sim_granularity: 0.02  # 角度模拟粒度，单位为rad
  # 数值越大，角度模拟粒度越粗，计算速度更快，但精度降低；数值越小，角度模拟粒度更细，精度更高，但计算负担增加。

  vx_samples: 6  # 线速度样本数量
  # 数值越大，线速度样本越多，规划更精确，但计算负担增加；数值越小，样本数量减少，响应更快，但可能不够精确。

  vtheta_samples: 20  # 角速度样本数量
  # 数值越大，角速度样本越多，规划更精确，但计算负担增加；数值越小，样本数量减少，响应更快，但可能不够精确。

  controller_frequency: 20.0  # 控制器频率，单位为Hz
  # 数值越大，控制器更新频率越高，响应更快，但计算负担增加；数值越小，更新频率降低，响应变慢，但计算负担减轻。

  # 轨迹评分参数
  meter_scoring: true  # 是否使用米作为距离单位进行评分
  # true：使用米作为单位，适合实际距离评分；false：使用默认单位（通常是格子数），适合网格地图。

  occdist_scale: 0.1  # 障碍物距离权重
  # 数值越大，障碍物距离的权重越高，机器人更倾向于避开障碍物；数值越小，障碍物影响降低，机器人可能更接近障碍物。

  pdist_scale: 2.5  # 路径距离权重
  # 数值越大，路径距离的权重越高，机器人更倾向于贴近规划路径；数值越小，路径影响降低，机器人可能偏离路径。

  gdist_scale: 1.0  # 目标距离权重
  # 数值越大，目标距离的权重越高，机器人更倾向于快速到达目标；数值越小，目标影响降低，机器人可能更注重路径规划。

  heading_lookahead: 0.325  # 查看前方路径的距离，单位为m
  # 数值越大，查看前方路径的距离越远，适合高速运动；数值越小，查看距离缩短，适合低速运动。

  heading_scoring: true  # 是否根据机器人朝向评分
  # true：根据机器人朝向评分，适合需要精确朝向的任务；false：不根据朝向评分，适合一般导航任务。

  heading_scoring_timestep: 0.8  # 查看前方路径的时间，单位为s
  # 数值越大，查看前方路径的时间越长，适合高速运动；数值越小，查看时间缩短，适合低速运动。

  dwa: false  # 是否使用动态窗口方法（DWA）
  # true：使用动态窗口方法，适合动态环境；false：不使用动态窗口方法，适合静态环境。

  simple_attractor: false  # 是否使用简单吸引子
  # true：使用简单吸引子，适合简单任务；false：不使用简单吸引子，适合复杂任务。

  publish_cost_grid_pc: true  # 是否发布成本网格点云
  # true：发布成本网格点云，适合调试和可视化；false：不发布，减少计算负担。

  # 振荡预防参数
  oscillation_reset_dist: 0.25  # 重置振荡标志的距离，单位为m
  # 数值越大，振荡标志的重置距离越远，适合大范围运动；数值越小，振荡标志更频繁重置，适合精细运动。

  escape_reset_dist: 0.1  # 重置逃逸标志的距离，单位为m
  # 数值越大，逃逸标志的重置距离越远，适合大范围运动；数值越小，逃逸标志更频繁重置，适合精细运动。

  escape_reset_theta: 0.1  # 重置逃逸标志的角度，单位为rad
  # 数值越大，逃逸标志的重置角度越宽，适合大角度运动；数值越小，逃逸标志更频繁重置，适合小角度运动。
DWAPlannerROS:
  # 机器人配置参数
  acc_lim_x: 2.5  # x方向加速度限制，单位为m/s²
  # 数值越大，机器人加速和减速越快，运动更灵活；数值越小，运动更平稳，但响应速度变慢。

  acc_lim_y: 0  # y方向加速度限制，单位为m/s²
  # 数值越大，机器人在y方向的加速和减速越快，运动更灵活；数值越小，运动更平稳，但响应速度变慢。

  acc_lim_th: 3.2  # 角加速度限制，单位为rad/s²
  # 数值越大，机器人旋转加速和减速越快，转向更灵活；数值越小，转向更平稳，但响应速度变慢。

  max_vel_x: 0.5  # x方向最大速度，单位为m/s
  # 数值越大，机器人前进速度越快，效率更高；数值越小，速度受限，运动更谨慎。

  min_vel_x: 0.0  # x方向最小速度，单位为m/s
  # 数值越大，机器人在低速时的灵活性降低；数值越小，机器人可以更缓慢地移动，适合精细操作。

  max_vel_y: 0  # y方向最大速度，单位为m/s
  # 数值越大，机器人在y方向的最大速度越高，适合全向机器人；数值越小，速度受限，适合非全向机器人。

  min_vel_y: 0  # y方向最小速度，单位为m/s
  # 数值越大，机器人在y方向的最小速度越高；数值越小，速度受限，适合非全向机器人。

  max_vel_trans: 0.5  # 最大平移速度，单位为m/s
  # 数值越大，机器人平移速度越快，效率更高；数值越小，速度受限，运动更谨慎。

  min_vel_trans: 0.1  # 最小平移速度，单位为m/s
  # 数值越大，机器人在低速时的灵活性降低；数值越小，机器人可以更缓慢地移动，适合精细操作。

  max_vel_theta: 1.0  # 最大角速度，单位为rad/s
  # 数值越大，机器人旋转速度越快，转向更灵活；数值越小，旋转速度受限，转向更缓慢。

  min_vel_theta: 0.2  # 最小角速度，单位为rad/s
  # 数值越大，机器人在低速旋转时的灵活性降低；数值越小，机器人可以更缓慢地旋转，适合精细操作。

  # 目标容忍度参数
  yaw_goal_tolerance: 0.2  # 目标方向的容忍度，单位为rad
  # 数值越大，目标方向的容忍范围越宽，更容易达到目标；数值越小，方向要求更精确，但可能更难达到目标。

  xy_goal_tolerance: 0.25  # 目标位置的容忍度，单位为m
  # 数值越大，目标位置的容忍范围越宽，更容易达到目标；数值越小，位置要求更精确，但可能更难达到目标。

  latch_xy_goal_tolerance: false  # 是否锁定目标位置容忍度
  # true：锁定目标位置容忍度，目标位置一旦达到容忍范围，机器人停止；false：不锁定，机器人可能继续微调。